# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist = True
skip_missing_interpreters = True
envlist = fmt, lint, uats

[vars]
all_path = {[vars]driver_path} {[vars]tst_path}
driver_path = {toxinidir}/driver/
tst_path = {toxinidir}/tests/

[testenv]
passenv =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS
    KUBECONFIG
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1

[testenv:update-requirements]
allowlist_externals =
    bash
    find
    pip-compile
    xargs
commands = 
; uses 'bash -c' because piping didn't work in regular tox commands
  bash -c 'find . -type f -name "requirements*.in" | xargs --replace=\{\} pip-compile -U --resolver=backtracking \{\}'
deps =
    pip-tools
description = Update requirements files by executing pip-compile on all requirements*.in files, including those in subdirs.

[testenv:fmt]
commands =
    isort {[vars]all_path}
    black {[vars]all_path}
deps =
    -r requirements-fmt.txt
description = Apply coding style standards to code

[testenv:lint]
commands =
    # uncomment the following line if this charm owns a lib
    # codespell {[vars]lib_path}
    codespell {toxinidir}/. --skip {toxinidir}/./.git --skip {toxinidir}/./.tox \
      --skip {toxinidir}/./build --skip {toxinidir}/./lib --skip {toxinidir}/./venv \
      --skip {toxinidir}/./.mypy_cache \
      --skip {toxinidir}/./icon.svg --skip *.json.tmpl
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}
deps =
    -r requirements-lint.txt
description = Check code against coding style standards

[testenv:uats]
commands = pytest -vv --tb native {[vars]driver_path} -s {posargs}
deps =
    -r requirements.txt
description = Run UATs
